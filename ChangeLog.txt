
   ######                          #######                               
   #     #   ##    ####  #    #    #       #    #  ####  # #    # ###### 
   #     #  #  #  #    # #   #     #       ##   # #    # # ##   # #      
   ######  #    # #      ####      #####   # #  # #      # # #  # #####  
   #   #   ###### #      #  #      #       #  # # #  ### # #  # # #      
   #    #  #    # #    # #   #     #       #   ## #    # # #   ## #      
   #     # #    #  ####  #    #    ####### #    #  ####  # #    # ###### 
                                                                      
###########################################################################
###########################################################################
###########################################################################

ChangeLog starts from initial commit (12/10/23)

+ [12/10/23 :: 1]:  Congratulation! Today is the birthday of my game engine! 
                    And plans are so wide! For example, my goals are to make
                    PBR materials by default in-engine, GI lighting, semi-RT
                    reflections, cool water simulation, post-processing efx,
                    integration of Bullet physics library, OpenAL audio, net
                    stack (tcp+udp), rich file IO, full control over memory 
                    consumption, integrated scripting language (i.e. python)
                    
+ [12/10/23 :: 2]:	Starting with Windows-only solution based on 
					Visual Studio Solution. Project's split into 
					'RackEngine' & '3rd-party' solution directories. A first 
					one contains engine-related code (engine library + 
					executable). Second one responsible on any other software 
					used by engine side (i.e.> libffmpeg, openal, etc..)

+ [12/11/23 :: 3]:	Started memory subsystem with simple stack_memory_provider 
					for small stack-based memory allocations; fixed_heap_memory_provider 
					for large but fixed by size memory allocations; all derived 
					from 'basic_memory_provider' interface. Done basic memory manager 
					for simple centralized interface to allocate a memory!

+ [MM/DD/YY :: N]: ...
