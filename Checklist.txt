
   ######                          #######                               
   #     #   ##    ####  #    #    #       #    #  ####  # #    # ###### 
   #     #  #  #  #    # #   #     #       ##   # #    # # ##   # #      
   ######  #    # #      ####      #####   # #  # #      # # #  # #####  
   #   #   ###### #      #  #      #       #  # # #  ### # #  # # #      
   #    #  #    # #    # #   #     #       #   ## #    # # #   ## #      
   #     # #    #  ####  #    #    ####### #    #  ####  # #    # ###### 
                                                                      
###########################################################################
###########################################################################
###########################################################################

General (but not really precise) check-list for my engine!

Legend:
	[0] = work's done.
	[X] = work in progress.
	[D] = dropped, not relevant anymore.

 -> Core
	[O] Basic primitive types
	[X] Basic thread representation
	[O] Memory allocators (updates)
	[X] JSON file format parser/serializer
	-> Algorithms 
		[O] Simple bytes count (strlen-like)
		[X] Some small set of search algorithms
		[O] Hashing routines
		[X] Base64 decode/encode routines
		[X] ...?

	-> Math 
		[O] Basic vectors support (without requiring complex functions)
		[X] Basic scalar functios
		[X] Matrix type
		[X] Quaternion type
		[X] Vectors functions
		[X] Quaternion functions
		[X] Matrix functions
		[X] AABB collision resolving
		[X] Frustum view utilities

-> ADT (Abstract Data Types)
	[O] Simple container to handle flags in a more robust way
	[X] Small vector container class
	[X] Small string(label) class
	[X] Dynamic vector container class
	[X] Dynamic SSO string class
	[X] Hash table
	[X] Tree container
	[X] Graph container <???>
	[X] Forward-linked list container class
	[X] Reusable vector container class
	[X] Thread pool
	[X] Queue class
	[X] Reusable queue container class
	
-> RT (Runtime engine code)
	[O] Engine-driven runtime starter
	-> Engine
		[O] Global engine state (runtime state)
		[X] Global universal logging system
		[X] Profiling gathering?
		[X] Tree-like (JSON?) configuration parser/serializer
		[X] Sync/Async InputOutput
		[X] Virtual Filesystem (VFS)
		[X] Compression routines for vary of data types
		[X] Image coding routines
		[X] Media encoder/decoder (ffmpeg)
		[X] ...?
	
	-> Graphics 
		-> Desktop windows system
			[X] Window handle/interface
			[X] Input system (keyboard, mice, gamepads)
			
		[X] Abstract-ish graphics API
		-> Multiple-passes rendering engine
			[X] Deferred renderer (blinn-phong)
			[X] Clustered deferred renderer
			[X] Clustered forward renderer for tranparent shaders
			[X] Shadows (what kind, maybe RT??)
			[X] Reflections (Screen Space Reflections)
			[X] Instanced particles system (Screen Space Parrticles)
			[X] Physically Based Rendering shaders
			[X] Flexible shaders
			[X] Post processing stack (fixed stack, toggable components)
			[X] Material system
			[X] Global Illumination
			[X] Realistic water simulation
			[X] Physically Based Clouds simulation (weather system?)
	
	-> World
		[X] ...?

